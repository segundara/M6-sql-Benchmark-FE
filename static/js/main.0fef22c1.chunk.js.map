{"version":3,"sources":["logo.svg","components/TopNav.jsx","components/Details.jsx","components/Backoffice.jsx","components/Products.jsx","components/CheckoutForm.jsx","components/StripeContainer.jsx","components/CartDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","state","Navbar","collapseOnSelect","expand","to","process","Brand","Toggle","aria-controls","Collapse","id","Nav","className","this","props","location","pathname","icon","faCartPlus","onClick","history","push","Badge","variant","updateProductInCart","React","Component","withRouter","CustomToggle","children","eventKey","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","isCurrentEventKey","style","cursor","display","justifyContent","color","fontSize","fontWeight","padding","fontFamily","height","faAngleUp","faAngleDown","Details","product","productid","addReview","editModal","newReviewComment","comment","newReviewRate","rate","reviews","photo","handleComment","e","setState","currentTarget","value","handleRating","newRating","parseInt","fetchDetails","a","fetch","match","params","resp","ok","json","details","data","response","preventDefault","console","log","newReview","reviewBody","method","body","JSON","stringify","headers","deleteReview","Container","Row","Col","md","Image","src","image_url","width","name","description","brand","lineHeight","price","Button","length","Accordion","Card","as","Header","map","review","Body","key","_id","size","edit","Modal","show","onHide","Form","onSubmit","Group","controlId","Label","Control","onChange","type","placeholder","count","activeColor","Backoffice","getNumberOfProduct","totalProducts","then","responseObject","keys","Object","keyArr","i","sortingKeys","getPages","total","pages","Math","ceil","numPerPage","pageNumbers","changePage","currentPageNum","dataInPages","currentPage","selectedKey","skip","url","products","sortParam","orderKey","getOrderBy","sortedList","sortByKey","orderedList","orderByKey","handleSelect","componentDidMount","saveImg","target","files","updateProductInfo","FormData","append","editProductInfo","editInfo","category","editSingleProductInfo","event","currentId","getProductInfo","newProduct","addNewproduct","alert","addModal","deleteInfo","orderKeysArray","DropdownButton","ButtonGroup","drop","title","toUpperCase","onSelect","Dropdown","Item","Alert","Table","striped","bordered","hover","responsive","header","threeDots","totalPages","showMax","prevNext","activeBgColor","activeBorderColor","page","for","required","surname","email","dateofbirth","country","Products","numOfProduct","loading","getCategories","categories","unshift","element","innerPages","j","fetchProducts","catArray","item","selectedCategories","includes","allCategories","list","items","listForAll","linkToDetails","addToCart","productId","userid","sendCartUpdate","fluid","viewBox","x","y","rx","ry","Tab","defaultActiveKey","Link","Content","Pane","Img","Title","useState","done","setDone","stripe","useStripe","elements","useElements","handleSubmit","createPaymentMethod","card","getElement","CardElement","error","paymentMethod","axios","post","amount","paymentTotal","success","emptyCart","setTimeout","message","maxWidth","margin","flexDirection","stripeTestPromise","loadStripe","CartDetails","cartTotal","cartItems","makePayment","removeFromCart","productID","showCartDetails","totalArray","parseFloat","totalAmount","reduce","acc","curr","unitary_price","quantity","faTrash","App","productidArray","idArray","setPayment","path","exact","render","component","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0fef22c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Navbar, Nav, Badge } from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCartPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Style.css\"\r\n\r\nclass NavBar extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\">\r\n                <Link to={process.env.REACT_APP_HOMEPAGE}>\r\n                    <Navbar.Brand>Strive-Mazon</Navbar.Brand>\r\n                </Link>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Link to=\"/backoffice\"\r\n                            className={\r\n                                this.props.location.pathname === '/backoffice'\r\n                                    ? \"nav-link active shadow-lg border-bottom\"\r\n                                    : \"nav-link\"\r\n                            }\r\n                        >\r\n                            Backoffice\r\n                        </Link>\r\n                    </Nav>\r\n\r\n                    {this.props.location.pathname === '/backoffice'\r\n                        ? null\r\n                        : (\r\n                            <>\r\n                                <FontAwesomeIcon icon={faCartPlus} className=\"mt-4\" onClick={() => this.props.history.push(\"/checkout\")} />\r\n                                <Badge variant=\"info\">{this.props.updateProductInCart ? this.props.updateProductInCart : 0}</Badge>\r\n                            </>\r\n                        )\r\n                    }\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(NavBar);\r\n","import React, { Component, useContext } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Image,\r\n    Navbar,\r\n    Nav,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Accordion,\r\n    Card,\r\n    Badge\r\n} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\n\r\nfunction CustomToggle({ children, eventKey, callback }) {\r\n    const currentEventKey = useContext(AccordionContext);\r\n\r\n    const decoratedOnClick = useAccordionToggle(\r\n        eventKey,\r\n        () => callback && callback(eventKey)\r\n    );\r\n\r\n    const isCurrentEventKey = currentEventKey === eventKey;\r\n\r\n    return (\r\n        <div\r\n            onClick={decoratedOnClick}\r\n            style={{\r\n                cursor: \"pointer\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                color: \"#fff\",\r\n                fontSize: \"1rem\",\r\n                fontWeight: \"900\",\r\n                padding: \"0.5rem 1rem\",\r\n                fontFamily: \"sans-serif\",\r\n            }}\r\n        >\r\n            {children}\r\n            <FontAwesomeIcon\r\n                style={{ height: \"auto\" }}\r\n                icon={isCurrentEventKey ? faAngleUp : faAngleDown}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nclass Details extends Component {\r\n\r\n    state = {\r\n        product: [],\r\n        productid: null,\r\n        addReview: false,\r\n        editModal: false,\r\n        newReviewComment: {\r\n            comment: \"\"\r\n        },\r\n        newReviewRate: {\r\n            rate: 1\r\n        },\r\n        reviews: [],\r\n        photo: ''\r\n    }\r\n\r\n    handleComment = (e) => {\r\n        this.setState({\r\n            newReviewComment: { comment: e.currentTarget.value }\r\n        });\r\n    }\r\n\r\n    handleRating = (newRating) => {\r\n        this.setState({\r\n            newReviewRate: { rate: parseInt(newRating) }\r\n        });\r\n    };\r\n\r\n    fetchDetails = async () => {\r\n        const resp = await fetch(`${process.env.REACT_APP_API_URL}/products/` + this.props.match.params.id)\r\n        if (resp.ok) {\r\n            const details = await resp.json()\r\n            this.setState({\r\n                product: details.data\r\n            });\r\n        }\r\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/products/` + this.props.match.params.id + \"/reviews\")\r\n        if (response.ok) {\r\n            const details = await response.json()\r\n            this.setState({\r\n                reviews: details.data\r\n            });\r\n        }\r\n    }\r\n\r\n    addReview = async (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state.newReview)\r\n\r\n        const reviewBody = ({ ...this.state.newReviewComment, ...this.state.newReviewRate, \"productid\": this.props.match.params.id })\r\n\r\n        const resp = await fetch(`${process.env.REACT_APP_API_URL}/reviews`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(reviewBody),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        if (resp.ok) {\r\n\r\n            this.setState({\r\n                addReview: false,\r\n                newReviewComment: {\r\n                    comment: \"\"\r\n                },\r\n                newReviewRate: {\r\n                    rate: 1\r\n                },\r\n            });\r\n\r\n            this.fetchDetails()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchDetails()\r\n    }\r\n\r\n    deleteReview = async (id) => {\r\n        const resp = await fetch(`${process.env.REACT_APP_API_URL}/reviews/` + id, {\r\n            method: \"DELETE\"\r\n        })\r\n\r\n        this.fetchDetails()\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state.reviews)\r\n        console.log(this.state.product)\r\n        return (\r\n            <Container className=\"py-5\">\r\n                <Row>\r\n                    {this.state.product && (\r\n                        <>\r\n                            <Col md={3} className=\"mt-5\">\r\n                                <Image src={this.state.product.image_url} style={{ height: \"20rem\", width: \"20rem\" }} />\r\n                            </Col>\r\n                            <Col md={7} className=\"mt-5 detail\">\r\n                                <div className=\"w-50\">\r\n                                    <p><h3>{this.state.product.name}</h3></p>\r\n                                    <p>\r\n                                        <span><strong>Description:</strong></span>\r\n                                        <span> {this.state.product.description}</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <span><strong>Brand:</strong></span>\r\n                                        <span> {this.state.product.brand}</span>\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-between w-50\">\r\n                                    <Badge variant=\"info\" style={{ lineHeight: '2rem', fontSize: 'large' }}>€{this.state.product.price}</Badge>\r\n                                    <Button variant=\"secondary\" onClick={() => this.setState({ addReview: true })}>Add review</Button>\r\n                                </div>\r\n\r\n                                <div className=\"d-flex justify-content-center mt-4 w-75\">\r\n                                    {this.state.reviews.length > 0 ?\r\n                                        <Accordion style={{ width: \"70%\" }}>\r\n                                            <Card className=\"accordion-card\">\r\n                                                <CustomToggle as={Card.Header} eventKey=\"1\">\r\n                                                    See customers' reviews!\r\n                                                        </CustomToggle>\r\n                                                <Accordion.Collapse eventKey=\"1\">\r\n                                                    <>\r\n                                                        {this.state.reviews.map(review =>\r\n                                                            <Card.Body key={review._id}>\r\n                                                                <ReactStars\r\n                                                                    value={review.rate}\r\n                                                                    size={24}\r\n                                                                    edit={false}\r\n                                                                />\r\n                                                                {review.comment}\r\n\r\n                                                                <Button\r\n                                                                    className=\"ml-3\"\r\n                                                                    variant=\"danger\"\r\n                                                                    onClick={() => this.deleteReview(review._id)}\r\n                                                                >Delete</Button>\r\n                                                            </Card.Body>\r\n                                                        )}\r\n                                                    </>\r\n                                                </Accordion.Collapse>\r\n                                            </Card>\r\n                                        </Accordion>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </Col>\r\n                        </>\r\n                    )}\r\n                </Row>\r\n                <Modal show={this.state.addReview} onHide={() => this.setState({\r\n                    addReview: false,\r\n                    productid: null,\r\n                    newReviewComment: {\r\n                        comment: \"\"\r\n                    },\r\n                    newReviewRate: {\r\n                        rate: 1\r\n                    }\r\n                })}>\r\n                    <Modal.Body>\r\n                        <Form onSubmit={this.addReview} >\r\n                            <Row className=\"d-flex justify-content-center\">\r\n                                <Col md={8}>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label>Comment</Form.Label>\r\n                                        <Form.Control\r\n                                            value={this.state.newReviewComment.comment}\r\n                                            onChange={this.handleComment}\r\n                                            type=\"text\"\r\n                                            placeholder=\"Your comment for the product\" />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"d-flex justify-content-center\">\r\n                                <Col md={8}>\r\n                                    <Form.Label>Rate the product</Form.Label>\r\n                                    <ReactStars\r\n                                        count={5}\r\n                                        value={this.state.newReviewRate.rate}\r\n                                        onChange={this.handleRating}\r\n                                        size={24}\r\n                                        activeColor=\"#ffd700\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Add review\r\n                                </Button>\r\n\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Details;","import React, { Component } from \"react\";\r\nimport {\r\n    Container,\r\n    Table,\r\n    ToggleButton,\r\n    ToggleButtonGroup,\r\n    DropdownButton,\r\n    Dropdown,\r\n    ButtonGroup,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Alert,\r\n    Row,\r\n    Col\r\n} from \"react-bootstrap\";\r\nimport Pagination from \"react-bootstrap-4-pagination\";\r\n\r\n\r\nclass Backoffice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageNumbers: [],\r\n            products: [],\r\n            totalProducts: null,\r\n            numPerPage: 5,\r\n            currentPageNum: 1,\r\n            sortingKeys: [],\r\n            selectedKey: '...',\r\n            orderKey: 'desc',\r\n            orderKeysArray: ['asc', 'desc'],\r\n            newProduct: {\r\n                name: \"\",\r\n                brand: \"\",\r\n                description: \"\",\r\n                category: '',\r\n                price: ''\r\n            },\r\n            editProductInfo: {\r\n                name: \"\",\r\n                brand: \"\",\r\n                description: \"\",\r\n                category: '',\r\n                price: ''\r\n            },\r\n            addModal: false,\r\n            editModal: false,\r\n            photo: '',\r\n            productid: '',\r\n        };\r\n\r\n    }\r\n\r\n    getNumberOfProduct = async () => {\r\n        const totalProducts = `${process.env.REACT_APP_API_URL}/products`\r\n        await fetch(totalProducts)\r\n            .then((response) => response.json())\r\n\r\n            .then((responseObject) => {\r\n                this.setState({ totalProducts: responseObject.count })\r\n\r\n\r\n                if (responseObject.data.length > 0) {\r\n                    let keys = Object.keys(responseObject.data[0]);\r\n                    const keyArr = []\r\n                    for (let i = 0; i < keys.length; i++) {\r\n                        let key = keys[i];\r\n                        if ((key === 'name') || (key === 'brand') || (key === 'description') || (key === 'category') || (key === 'price'))\r\n                            keyArr.push(key)\r\n                    }\r\n                    this.setState({ sortingKeys: keyArr })\r\n                }\r\n                this.getPages(responseObject.count)\r\n            })\r\n\r\n    }\r\n\r\n    getPages = (total) => {\r\n        const pages = [];\r\n        for (let i = 1; i <= Math.ceil(total / this.state.numPerPage); i++) {\r\n            pages.push(i);\r\n        }\r\n        this.setState({\r\n            pageNumbers: pages,\r\n        });\r\n    };\r\n\r\n    changePage = (value) => {\r\n        this.setState({\r\n            currentPageNum: value\r\n        })\r\n        this.dataInPages(value)\r\n    }\r\n\r\n    dataInPages = async (currentPage) => {\r\n        let sortParam\r\n        if (this.state.selectedKey === '...') {\r\n            const skip = (currentPage * this.state.numPerPage) - this.state.numPerPage\r\n            const url = `${process.env.REACT_APP_API_URL}/products?limit=${this.state.numPerPage}&offset=${skip}`\r\n\r\n            await fetch(url)\r\n                .then((response) => response.json())\r\n\r\n                .then((responseObject) =>\r\n                    this.setState({\r\n                        products: responseObject.data\r\n                    })\r\n                )\r\n        }\r\n        else {\r\n            sortParam = this.state.selectedKey\r\n\r\n            const skip = (currentPage * this.state.numPerPage) - this.state.numPerPage\r\n            const url = `${process.env.REACT_APP_API_URL}/products?limit=${this.state.numPerPage}&offset=${skip}&sort=${sortParam}&order=${this.state.orderKey}`\r\n\r\n            await fetch(url)\r\n                .then((response) => response.json())\r\n\r\n                .then((responseObject) =>\r\n                    this.setState({\r\n                        products: responseObject.data\r\n                    })\r\n                )\r\n        }\r\n    }\r\n\r\n    getOrderBy = (eventKey) => {\r\n        this.setState({ orderKey: eventKey })\r\n    }\r\n\r\n    sortedList = async (sortByKey) => {\r\n        const skip = (this.state.currentPageNum * this.state.numPerPage) - this.state.numPerPage\r\n        const url = `${process.env.REACT_APP_API_URL}/products?limit=${this.state.numPerPage}&offset=${skip}&sort=${sortByKey}&order=${this.state.orderKey}`\r\n\r\n        await fetch(url)\r\n            .then((response) => response.json())\r\n            .then((responseObject) =>\r\n                this.setState({ products: responseObject.data })\r\n            )\r\n    }\r\n\r\n    orderedList = async (orderByKey) => {\r\n        const skip = (this.state.currentPageNum * this.state.numPerPage) - this.state.numPerPage\r\n        const url = `${process.env.REACT_APP_API_URL}/products?limit=${this.state.numPerPage}&offset=${skip}&sort=${this.state.selectedKey}&order=${orderByKey}`\r\n\r\n        await fetch(url)\r\n            .then((response) => response.json())\r\n            .then((responseObject) =>\r\n                this.setState({ products: responseObject.data })\r\n            )\r\n    }\r\n\r\n    handleSelect = (eventKey) => {\r\n        this.setState({ selectedKey: eventKey })\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n        this.getNumberOfProduct()\r\n\r\n        this.dataInPages(this.state.currentPageNum)\r\n    };\r\n\r\n\r\n    saveImg = (e) => {\r\n        this.setState({\r\n            photo: e.target.files[0]\r\n        });\r\n    }\r\n\r\n    updateProductInfo = async (e) => {\r\n        e.preventDefault()\r\n        const data = new FormData()\r\n        data.append(\"product\", this.state.photo)\r\n\r\n        const resp = await fetch(`${process.env.REACT_APP_API_URL}/products/` + this.state.productid, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(this.state.editProductInfo),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n\r\n        let addPhoto = await fetch(`${process.env.REACT_APP_API_URL}/products/` + this.state.productid + \"/upload\", {\r\n            method: \"POST\",\r\n            body: data\r\n        })\r\n\r\n        if (resp.ok) {\r\n            this.setState({\r\n                editModal: false\r\n            });\r\n            this.dataInPages()\r\n        }\r\n\r\n    }\r\n\r\n    editInfo = async (productid) => {\r\n        const resp = await fetch(`${process.env.REACT_APP_API_URL}/products/` + productid)\r\n\r\n        if (resp.ok) {\r\n            const product = await resp.json()\r\n            console.log(product)\r\n            this.setState({\r\n                editProductInfo: {\r\n                    name: product.data.name,\r\n                    brand: product.data.brand,\r\n                    description: product.data.description,\r\n                    category: product.data.category,\r\n                    price: product.data.price\r\n                },\r\n                productid: product.data._id,\r\n                editModal: true\r\n            });\r\n        }\r\n    }\r\n\r\n    editSingleProductInfo = event => {\r\n        let editProductInfo = this.state.editProductInfo\r\n        let currentId = event.currentTarget.id\r\n        console.log(currentId)\r\n        editProductInfo[currentId] = event.currentTarget.value\r\n\r\n        this.setState({ editProductInfo: editProductInfo })\r\n    }\r\n\r\n\r\n    getProductInfo = event => {\r\n        let newProduct = this.state.newProduct\r\n        let currentId = event.currentTarget.id\r\n        console.log(currentId)\r\n        newProduct[currentId] = event.currentTarget.value\r\n\r\n        this.setState({ newProduct: newProduct })\r\n    }\r\n\r\n\r\n    addNewproduct = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const url = `${process.env.REACT_APP_API_URL}/products`\r\n\r\n        try {\r\n            let response = await fetch(url, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(this.state.newProduct),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n            console.log(response.json())\r\n            if (response.ok) {\r\n                alert('Record saved!')\r\n                this.setState({\r\n                    newProduct: {\r\n                        name: \"\",\r\n                        brand: \"\",\r\n                        description: \"\",\r\n                        category: '',\r\n                        price: ''\r\n                    },\r\n                    addModal: false\r\n                })\r\n                this.dataInPages()\r\n            } else {\r\n                let json = await response.json()\r\n                alert(json)\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    deleteInfo = async (productid) => {\r\n        const resp = await fetch(`${process.env.REACT_APP_API_URL}/products/` + productid, {\r\n            method: \"DELETE\"\r\n        })\r\n\r\n        if (resp.ok) {\r\n            alert('Product deleted!')\r\n            this.dataInPages()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container className=\"pt-3\">\r\n                {this.state.pageNumbers.length > 0 && (\r\n\r\n                    <>\r\n                        <Button variant=\"info\" onClick={() => this.setState({ addModal: true })}>Add new product</Button>\r\n                        <DropdownButton\r\n                            as={ButtonGroup}\r\n                            className=\"mx-3\"\r\n                            key=\"left\"\r\n                            id={`dropdown-button-drop-left`}\r\n                            drop=\"left\"\r\n                            variant=\"secondary\"\r\n                            title={`Sort by ${this.state.selectedKey.toUpperCase()}`}\r\n                            onSelect={this.handleSelect}\r\n                        >\r\n                            {this.state.sortingKeys.map((key, i) => {\r\n                                return (\r\n                                    <Dropdown.Item key={i} eventKey={key} onClick={() => this.sortedList(key)}>{key}</Dropdown.Item>\r\n                                )\r\n                            })}\r\n                        </DropdownButton>\r\n\r\n                        <div className=\"d-flex mt-3\">\r\n                            <Alert variant=\"info\" className=\"text-center\">page <strong>{this.state.currentPageNum}</strong> of <strong>{this.state.pageNumbers.length}</strong></Alert>\r\n                            {this.state.selectedKey !== '...'\r\n                                ? (\r\n                                    <div className=\"d-flex\">\r\n                                        <Alert variant=\"info\" className=\"mx-3 text-center\">Order By <strong>{this.state.selectedKey.toUpperCase()}</strong></Alert>\r\n                                        <DropdownButton\r\n                                            as={ButtonGroup}\r\n                                            className=\"h-75\"\r\n                                            key=\"right\"\r\n                                            id={`dropdown-button-drop-right`}\r\n                                            drop=\"right\"\r\n                                            variant=\"secondary\"\r\n                                            title={`${this.state.orderKey.toUpperCase()}ENDING order`}\r\n                                            onSelect={this.getOrderBy}\r\n                                        >\r\n                                            {this.state.orderKeysArray.map((key, i) => {\r\n                                                return (\r\n                                                    <Dropdown.Item key={i} eventKey={key} onClick={() => this.orderedList(key)}>{key}</Dropdown.Item>\r\n                                                )\r\n                                            })}\r\n                                        </DropdownButton>\r\n                                    </div>\r\n                                )\r\n                                : null}\r\n                        </div>\r\n\r\n                        <Table striped bordered hover size=\"sm\" responsive=\"sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    {this.state.sortingKeys.map((header, i) => <th key={i}>{header.toUpperCase()}</th>)}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {this.state.products.map((product, i) => {\r\n\r\n                                    return (\r\n                                        <tr key={product._id}>\r\n                                            <td>{this.state.currentPageNum > 1\r\n                                                ? i = i + 1 + (this.state.numPerPage * this.state.currentPageNum) - this.state.numPerPage\r\n                                                : i = i + 1}\r\n                                            </td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>{product.description}</td>\r\n                                            <td>{product.brand}</td>\r\n                                            <td>{product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td><Button variant=\"warning\" onClick={() => this.editInfo(product._id)}>edit</Button></td>\r\n                                            <td><Button variant=\"danger\" onClick={() => this.deleteInfo(product._id)}>delete</Button></td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </Table>\r\n\r\n                        <Pagination\r\n                            threeDots\r\n                            totalPages={\r\n                                this.state.pageNumbers.length\r\n                            }\r\n                            currentPage={this.state.currentPageNum}\r\n                            showMax={2}\r\n                            prevNext\r\n                            activeBgColor=\"#17a2b8\"\r\n                            color=\"#17a2b8\"\r\n                            activeBorderColor=\"#17a2b8\"\r\n                            onClick={(page) =>\r\n                                this.changePage(page)\r\n                            }\r\n                        />\r\n\r\n                        <Modal\r\n                            show={this.state.editModal}\r\n                            onHide={() => this.setState({\r\n                                editModal: false, editProductInfo: {\r\n                                    name: \"\",\r\n                                    brand: \"\",\r\n                                    description: \"\",\r\n                                    category: '',\r\n                                    price: ''\r\n                                }\r\n                            })}>\r\n                            <Modal.Body>\r\n                                <Form onSubmit={this.updateProductInfo}>\r\n                                    <div className=\"form-group mt-5\">\r\n                                        <label for=\"name\">Product name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"name\"\r\n                                            placeholder=\"Input here the Product name\"\r\n                                            onChange={this.editSingleProductInfo}\r\n                                            value={this.state.editProductInfo.name}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group \">\r\n                                        <label for=\"brand\">Product brand</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"brand\"\r\n                                            placeholder=\"Input here the Product brand\"\r\n                                            onChange={this.editSingleProductInfo}\r\n                                            value={this.state.editProductInfo.brand}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"description\">Product description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"description\"\r\n                                            placeholder=\"Input here the Product description\"\r\n                                            onChange={this.editSingleProductInfo}\r\n                                            value={this.state.editProductInfo.description}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"category\">Product category</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"category\"\r\n                                            placeholder=\"Input here the Product category\"\r\n                                            onChange={this.editSingleProductInfo}\r\n                                            value={this.state.editProductInfo.category}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"price\">Product price</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"price\"\r\n                                            placeholder=\"Input here the Product price\"\r\n                                            onChange={this.editSingleProductInfo}\r\n                                            value={this.state.editProductInfo.price}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"file\" name=\"file\" onChange={this.saveImg} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <Button className=\"btn btn-primary mt-4\" type=\"submit\">\r\n                                            Update Product Info\r\n                        </Button>\r\n                                    </div>\r\n                                </Form>\r\n\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                        <Modal\r\n                            show={this.state.addModal}\r\n                            onHide={() => this.setState({\r\n                                addModal: false, newProduct: {\r\n                                    name: \"\",\r\n                                    surname: \"\",\r\n                                    email: \"\",\r\n                                    dateofbirth: '',\r\n                                    country: ''\r\n                                }\r\n                            })}>\r\n                            <Modal.Body>\r\n                                <Form onSubmit={this.addNewproduct}>\r\n                                    <div className=\"form-group mt-5\">\r\n                                        <label for=\"name\">Product name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"name\"\r\n                                            placeholder=\"Input here the Product name\"\r\n                                            onChange={this.getProductInfo}\r\n                                            value={this.state.newProduct.name}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group \">\r\n                                        <label for=\"surname\">Product brand</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"brand\"\r\n                                            placeholder=\"Input here the Product brand\"\r\n                                            onChange={this.getProductInfo}\r\n                                            value={this.state.newProduct.brand}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"eamil\">Product description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"description\"\r\n                                            placeholder=\"Input here the Product description\"\r\n                                            onChange={this.getProductInfo}\r\n                                            value={this.state.newProduct.description}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"dateofbirth\">Product category</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"category\"\r\n                                            placeholder=\"Input here the Product category\"\r\n                                            onChange={this.getProductInfo}\r\n                                            value={this.state.newProduct.category}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"country\">Product price</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            id=\"price\"\r\n                                            placeholder=\"Input here the Product price\"\r\n                                            onChange={this.getProductInfo}\r\n                                            value={this.state.newProduct.price}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <Button className=\"btn btn-primary mt-4\" type=\"submit\">\r\n                                            Save Product Info\r\n                        </Button>\r\n                                    </div>\r\n                                </Form>\r\n\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                    </>\r\n                )}\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Backoffice;\r\n","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\"\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  Alert,\r\n  Tab,\r\n  Spinner,\r\n  Nav,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCartPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { withRouter } from \"react-router\";\r\nimport Pagination from \"react-bootstrap-4-pagination\";\r\nimport \"./Style.css\";\r\n\r\nclass Products extends React.Component {\r\n  state = {\r\n    products: [],\r\n    numOfProduct: [],\r\n    numPerPage: 8,\r\n    currentPageNum: 1,\r\n    loading: false,\r\n    pageNumbers: [],\r\n  };\r\n\r\n  getNumberOfProduct = async () => {\r\n    let total = [];\r\n    const categories = await this.getCategories();\r\n    if (categories) {\r\n      for (const category of categories) {\r\n        // get total number for each category\r\n        const url = `${process.env.REACT_APP_API_URL}/products?category=${category}`;\r\n        const resp = await fetch(url);\r\n\r\n        if (resp.ok) {\r\n          const products = await resp.json();\r\n          total.push(products.count);\r\n        }\r\n      }\r\n\r\n      // get total number for all category together\r\n      const url = `${process.env.REACT_APP_API_URL}/products`;\r\n      const resp = await fetch(url);\r\n\r\n      if (resp.ok) {\r\n        const products = await resp.json();\r\n        total.unshift(products.count);\r\n      }\r\n      this.setState({\r\n        numOfProduct: total,\r\n      });\r\n      this.getPages(total);\r\n    }\r\n  };\r\n\r\n  getPages = (total) => {\r\n    const pages = [];\r\n    for (let i = 0; i < total.length; i++) {\r\n      const element = total[i];\r\n      let innerPages = [];\r\n      for (let j = 1; j <= Math.ceil(element / this.state.numPerPage); j++) {\r\n        innerPages.push(j);\r\n      }\r\n      pages.push(innerPages);\r\n    }\r\n    this.setState({\r\n      pageNumbers: pages,\r\n    });\r\n  };\r\n\r\n  changePage = (value) => {\r\n    if (value > 1) {\r\n      this.setState({\r\n        currentPageNum: value,\r\n      });\r\n    } else {\r\n      this.setState({ currentPageNum: 1 });\r\n    }\r\n    this.fetchProducts();\r\n  };\r\n\r\n  getCategories = async () => {\r\n    const url = `${process.env.REACT_APP_API_URL}/products`;\r\n    const resp = await fetch(url);\r\n\r\n    if (resp.ok) {\r\n      const categories = await resp.json();\r\n      let catArray = categories.data.map((item) => item.category);\r\n      let selectedCategories = [];\r\n      catArray.map((item) =>\r\n        !selectedCategories.includes(item)\r\n          ? selectedCategories.push(item)\r\n          : null\r\n      );\r\n\r\n      return selectedCategories;\r\n    }\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    let allCategories = [];\r\n    const categories = await this.getCategories();\r\n    if (categories) {\r\n      const skip =\r\n        this.state.currentPageNum * this.state.numPerPage -\r\n        this.state.numPerPage;\r\n      for (const category of categories) {\r\n        // get all products and break them into category and add into the array\r\n        let list = {};\r\n        const url = `${process.env.REACT_APP_API_URL}/products?category=${category}&limit=${this.state.numPerPage}&offset=${skip}`;\r\n        const resp = await fetch(url);\r\n\r\n        if (resp.ok) {\r\n          const products = await resp.json();\r\n          list.category = category;\r\n          list.items = products.data;\r\n          allCategories.push(list);\r\n        }\r\n      }\r\n\r\n      // get all products for all categories and add into the array\r\n      let listForAll = {};\r\n      const category = \"All Products\";\r\n      const url = `${process.env.REACT_APP_API_URL}/products?limit=${this.state.numPerPage}&offset=${skip}`;\r\n      const resp = await fetch(url);\r\n\r\n      if (resp.ok) {\r\n        const products = await resp.json();\r\n        listForAll.category = category;\r\n        listForAll.items = products.data;\r\n        allCategories.unshift(listForAll);\r\n      }\r\n      this.setState({\r\n        products: allCategories,\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getNumberOfProduct();\r\n    this.fetchProducts();\r\n  }\r\n\r\n  linkToDetails = (id) => {\r\n    this.props.history.push(\"/productDetails/\" + id);\r\n  };\r\n\r\n  addToCart = async (productId) => {\r\n    const userid = 1;\r\n    const url = `${process.env.REACT_APP_API_URL}/cart`;\r\n    const addProduct = await fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ productid: productId, userid: userid }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    if (addProduct.ok) {\r\n      this.props.sendCartUpdate(productId, userid);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          {this.state.loading && (\r\n            <ContentLoader style={{ width: '100%', height: '100vh' }} viewBox=\"0 0 1500 800\" height={800} width={1500} {...this.props}>\r\n              <rect x=\"5\" y=\"45\" rx=\"4\" ry=\"4\" width=\"220\" height=\"35\" />\r\n              <rect x=\"5\" y=\"85\" rx=\"4\" ry=\"4\" width=\"220\" height=\"35\" />\r\n              <rect x=\"5\" y=\"125\" rx=\"4\" ry=\"4\" width=\"220\" height=\"35\" />\r\n              <rect x=\"5\" y=\"165\" rx=\"4\" ry=\"4\" width=\"220\" height=\"35\" />\r\n              <rect x=\"250\" y=\"43\" rx=\"0\" ry=\"0\" width=\"280\" height=\"300\" />\r\n              <rect x=\"550\" y=\"43\" rx=\"0\" ry=\"0\" width=\"280\" height=\"300\" />\r\n              <rect x=\"850\" y=\"43\" rx=\"0\" ry=\"0\" width=\"280\" height=\"300\" />\r\n              <rect x=\"1150\" y=\"43\" rx=\"0\" ry=\"0\" width=\"280\" height=\"300\" />\r\n              <rect x=\"250\" y=\"400\" rx=\"2\" ry=\"2\" width=\"280\" height=\"300\" />\r\n              <rect x=\"550\" y=\"400\" rx=\"2\" ry=\"2\" width=\"280\" height=\"300\" />\r\n              <rect x=\"850\" y=\"400\" rx=\"2\" ry=\"2\" width=\"280\" height=\"300\" />\r\n              <rect x=\"1150\" y=\"400\" rx=\"2\" ry=\"2\" width=\"280\" height=\"300\" />\r\n            </ContentLoader>\r\n          )}\r\n          {this.state.products && this.state.products.length > 0 && (\r\n            <div className=\"inStore\">\r\n              <Tab.Container\r\n                id=\"left-tabs-example\"\r\n                defaultActiveKey=\"0\"\r\n                onSelect={() => this.changePage(1)}\r\n              >\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Nav variant=\"pills\" className=\"flex-column\">\r\n                      {this.state.products.map((list, i) => {\r\n                        return (\r\n                          <Nav.Item key={i}>\r\n                            <Nav.Link\r\n                              eventKey={i}\r\n                              className=\"d-flex justify-content-between\"\r\n                            >\r\n                              <small>\r\n                                <b>{list.category}</b>\r\n                              </small>\r\n                              <Badge variant=\"light\">\r\n                                <span>{this.state.numOfProduct[i]}</span>\r\n                              </Badge>\r\n                            </Nav.Link>\r\n                          </Nav.Item>\r\n                        );\r\n                      })}\r\n                    </Nav>\r\n                  </Col>\r\n                  <Col md={10}>\r\n                    <Tab.Content>\r\n                      {this.state.products.map((list, i) => {\r\n                        return (\r\n                          <Tab.Pane key={i} eventKey={i}>\r\n                            {//!this.state.loading &&\r\n                              list.items.length > 0 &&\r\n                              this.state.pageNumbers &&\r\n                              this.state.pageNumbers.length > 0 && (\r\n                                <>\r\n                                  <div className=\"d-flex flex-wrap\">\r\n                                    {list.items.map((product) => (\r\n                                      <Card\r\n                                        key={product._id}\r\n                                        className=\"productCard\"\r\n                                      >\r\n                                        <Card.Img\r\n                                          variant=\"top\"\r\n                                          src={product.image_url}\r\n                                          height=\"40%\"\r\n                                        />\r\n                                        <Card.Body>\r\n                                          <Card.Title>\r\n                                            {product.name}\r\n                                          </Card.Title>\r\n                                          <label>\r\n                                            Brand: {product.brand}\r\n                                          </label>\r\n                                          <h4> €{product.price}</h4>\r\n                                          <div className=\"d-flex justify-content-between\">\r\n                                            <Button\r\n                                              variant=\"info\"\r\n                                              onClick={() =>\r\n                                                this.linkToDetails(\r\n                                                  product._id\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              detail\r\n                                                </Button>\r\n                                            <Button\r\n                                              variant=\"secondary\"\r\n                                              onClick={\r\n                                                () =>\r\n                                                  this.addToCart(\r\n                                                    product._id\r\n                                                  )\r\n                                              }\r\n                                            >\r\n                                              add to cart\r\n                                                  <FontAwesomeIcon\r\n                                                icon={faCartPlus}\r\n                                              />\r\n                                            </Button>\r\n                                          </div>\r\n                                        </Card.Body>\r\n                                      </Card>\r\n                                    ))}\r\n                                  </div>\r\n                                  <div className=\"d-flex justify-content-between mt-2 mainPageFooter\">\r\n                                    <Pagination\r\n                                      threeDots\r\n                                      totalPages={\r\n                                        this.state.pageNumbers[i].length\r\n                                      }\r\n                                      currentPage={this.state.currentPageNum}\r\n                                      showMax={2}\r\n                                      prevNext\r\n                                      activeBgColor=\"#17a2b8\"\r\n                                      color=\"#17a2b8\"\r\n                                      activeBorderColor=\"#17a2b8\"\r\n                                      onClick={(page) =>\r\n                                        this.changePage(page)\r\n                                      }\r\n                                    />\r\n\r\n                                    <Alert\r\n                                      variant=\"light\"\r\n                                    >\r\n                                      page{\" \"}\r\n                                      <strong>\r\n                                        {this.state.currentPageNum}\r\n                                      </strong>{\" \"}\r\n                                        of{\" \"}\r\n                                      <strong>\r\n                                        {this.state.pageNumbers[i].length}\r\n                                      </strong>\r\n                                    </Alert>\r\n                                  </div>\r\n                                </>\r\n                              )}\r\n                            {!this.state.loading && list.items.length < 1 && (\r\n                              <p className=\"text-center\">\r\n                                <strong>No product in store</strong>\r\n                              </p>\r\n                            )}\r\n                          </Tab.Pane>\r\n                        );\r\n                      })}\r\n                    </Tab.Content>\r\n                  </Col>\r\n                </Row>\r\n              </Tab.Container>\r\n            </div>\r\n          )}\r\n\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Products);\r\n","import React, { useState } from \"react\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport axios from \"axios\";\r\nimport { Alert, Button, Container, Form } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\"\r\nimport \"./Style.css\"\r\n\r\nconst CheckoutForm = (props) => {\r\n  console.log(props.history)\r\n  const [done, setDone] = useState(false)\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n    });\r\n\r\n    if (!error) {\r\n      console.log(\"Stripe 23 | token generated!\", paymentMethod);\r\n      //send token with payment details to backend\r\n      try {\r\n        const { id } = paymentMethod;\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_API_URL}/cart/stripe/charge`,\r\n          {\r\n            amount: props.paymentTotal,\r\n            id: id,\r\n          }\r\n        );\r\n\r\n        console.log(\"Stripe 35 | data\", response.data.success);\r\n        if (response.data.success) {\r\n          console.log(\"CheckoutForm.js 25 | payment successful!\");\r\n          const url = `${process.env.REACT_APP_API_URL}/cart/1`;\r\n          const resp = await fetch(url, {\r\n            method: \"DELETE\",\r\n          });\r\n\r\n          if (resp.ok) {\r\n            props.emptyCart(0);\r\n            setDone(true)\r\n            setTimeout(() => {\r\n              setDone(false)\r\n              props.history.push(`${process.env.REACT_APP_HOMEPAGE}`)\r\n            }, 5000);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(\"CheckoutForm.js 28 | \", error);\r\n      }\r\n    } else {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"text-center pt-3\">\r\n      <div style={{ maxWidth: '50%', margin: 'auto' }}>\r\n        <h4>Enter your card details to complete the payment</h4>\r\n        <Alert variant=\"info\">\r\n          <strong>Total Purchase (€{props.paymentTotal})</strong>\r\n        </Alert>\r\n        <Form onSubmit={handleSubmit} style={{ maxWidth: '75%', display: 'flex', margin: 'auto', flexDirection: 'column' }}>\r\n          <CardElement className=\"my-5\" />\r\n          <button id=\"payBtn\">Pay Now</button>\r\n        </Form>\r\n        <Alert variant=\"info\" show={done} className=\"mt-3\">\r\n          <strong>\r\n            Payment accepted and your goods are on the way! Thank you for your purchase and hope to see you again!\r\n      </strong>\r\n        </Alert>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(CheckoutForm);","import React from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\n\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nconst PUBLIC_KEY =\r\n  \"pk_test_51HiMfGF0BTR6mhRYaP0W68izWmkcFUYNqvzshZIwb8d3MyAuViC8HFmP8WU4TQEOBsjlAqLn9tOr5RacYxeit67q00iqLQn6QY\";\r\n\r\nconst stripeTestPromise = loadStripe(PUBLIC_KEY);\r\n\r\nconst Stripe = ({paymentTotal, emptyCart}) => {\r\n  return (\r\n    <Elements stripe={stripeTestPromise}>\r\n      <CheckoutForm paymentTotal={paymentTotal} emptyCart={emptyCart}/>\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default withRouter(Stripe);\r\n","import React from \"react\";\r\nimport { Alert, Button, Table, Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass CartDetails extends React.Component {\r\n  state = {\r\n    cartTotal: 0,\r\n    cartItems: [],\r\n  };\r\n\r\n  makePayment = () => {\r\n    this.props.paymentTotal(this.state.cartTotal)\r\n    this.props.history.push(\"/payments\")\r\n  };\r\n\r\n  removeFromCart = async (productID) => {\r\n    const url = `${process.env.REACT_APP_API_URL}/cart/1/${productID}`;\r\n    const resp = await fetch(url, {\r\n      method: \"DELETE\",\r\n    });\r\n    if (resp.ok) {\r\n      this.showCartDetails()\r\n    }\r\n\r\n  }\r\n\r\n  showCartDetails = async () => {\r\n    const url = `${process.env.REACT_APP_API_URL}/cart/1`;\r\n    const resp = await fetch(url);\r\n    if (resp.ok) {\r\n      const products = await resp.json();\r\n      if (products.length > 0) {\r\n        const totalArray = products.map((item) => parseFloat(item.total));\r\n        let totalAmount = totalArray.reduce((acc, curr) => {\r\n          return acc + curr;\r\n        });\r\n        this.setState({\r\n          cartItems: products,\r\n          cartTotal: totalAmount,\r\n        });\r\n        console.log(totalArray);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.showCartDetails()\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.cartItems);\r\n    return (\r\n      <Container>\r\n        <div className=\"text-center mt-5\">\r\n          <Table striped bordered hover size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>name</th>\r\n                <th>unit price</th>\r\n                <th>quantity</th>\r\n                <th>total price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.cartItems.map((item, i) => (\r\n                <tr key={i}>\r\n                  <th>{i + 1}</th>\r\n                  <th>{item.name}</th>\r\n                  <th>{item.unitary_price}</th>\r\n                  <th>{item.quantity}</th>\r\n                  <th>{item.total}</th>\r\n                  <th>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      onClick={() => this.removeFromCart(item._id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </th>\r\n                </tr>\r\n              ))}\r\n              <tr>\r\n                <th></th>\r\n                <th></th>\r\n                <th></th>\r\n                <th>Overall Total</th>\r\n                <th>€{this.state.cartTotal}</th>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <Button variant=\"info\" onClick={() => this.props.history.push(`${process.env.REACT_APP_HOMEPAGE}`)}>\r\n              Continue shopping\r\n            </Button>\r\n            <Button variant=\"success\" onClick={() => this.makePayment()}>\r\n              Proceed to Payment\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartDetails;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navbar from \"./components/TopNav\";\nimport Details from \"./components/Details\";\nimport Backoffice from \"./components/Backoffice\";\nimport Products from \"./components/Products\";\nimport Stripe from \"./components/StripeContainer\";\nimport CartDetails from \"./components/CartDetails\";\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n    productidArray: [],\n    paymentTotal: 0\n  };\n\n  addToCart = async (productid, userid) => {\n    if (!this.state.productidArray.includes(productid)) {\n      const idArray = [...this.state.productidArray, productid];\n      this.setState({ productidArray: idArray, count: this.state.count + 1 });\n    } else {\n      this.setState({ count: this.state.count });\n    }\n  };\n\n  emptyCart = (value) => {\n    this.setState({ count: value });\n  };\n\n  setPayment = (value) => {\n    this.setState({ paymentTotal: value });\n  };\n\n  render() {\n    console.log(this.state.productidArray);\n    return (\n      <Router>\n        <Navbar updateProductInCart={this.state.count} />\n        <Route\n          path={process.env.REACT_APP_HOMEPAGE}\n          exact\n          render={(props) => (\n            <Products {...props} sendCartUpdate={this.addToCart} />\n          )}\n        />\n        <Route path=\"/productDetails/:id\" component={Details} />\n        <Route path=\"/payments\"\n          render={(props) => <Stripe {...props} paymentTotal={this.state.paymentTotal} emptyCart={this.emptyCart} />} />\n        <Route\n          path=\"/checkout\"\n          render={(props) => <CartDetails {...props} paymentTotal={this.setPayment} />}\n        />\n        <Route path=\"/backoffice\" component={Backoffice} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}