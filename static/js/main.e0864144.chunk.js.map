{"version":3,"sources":["logo.svg","components/TopNav.jsx","components/Details.jsx","components/Backoffice.jsx","components/Products.jsx","components/CheckoutForm.jsx","components/StripeContainer.jsx","components/CartDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","state","Navbar","collapseOnSelect","expand","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","this","props","location","pathname","icon","faCartPlus","onClick","history","push","Badge","variant","updateProductInCart","React","Component","withRouter","CustomToggle","children","eventKey","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","isCurrentEventKey","style","cursor","display","justifyContent","color","fontSize","fontWeight","padding","fontFamily","height","faAngleUp","faAngleDown","Details","product","productid","addReview","editModal","newReview","comment","rate","reviews","photo","handleChange","e","currentTarget","parseInt","value","setState","fetchDetails","a","fetch","process","match","params","resp","ok","json","details","data","response","preventDefault","reviewBody","method","body","JSON","stringify","headers","deleteReview","console","log","Container","Row","Col","md","Image","src","image_url","width","name","description","brand","lineHeight","price","Button","length","Accordion","Card","as","Header","map","review","Body","key","_id","Modal","show","onHide","Form","onSubmit","Group","controlId","Label","Control","onChange","type","placeholder","Backoffice","getNumberOfProduct","totalProducts","then","responseObject","count","keys","Object","keyArr","i","sortingKeys","changePage","currentPageNum","dataInPages","selectedKey","skip","numPerPage","url","products","sortParam","orderKey","getOrderBy","sortedList","sortByKey","orderedList","orderByKey","handleSelect","componentDidMount","saveImg","target","files","updateProductInfo","FormData","append","editProductInfo","editInfo","category","editSingleProductInfo","event","currentId","getProductInfo","newProduct","addNewproduct","alert","addModal","deleteInfo","orderKeysArray","pageNumbers","Math","ceil","DropdownButton","ButtonGroup","drop","title","toUpperCase","onSelect","Dropdown","Item","ToggleButtonGroup","defaultValue","number","ToggleButton","Alert","Table","striped","bordered","hover","size","responsive","header","for","required","surname","email","dateofbirth","country","Products","numOfProduct","loading","total","getCategories","categories","unshift","getPages","pages","element","innerPages","j","fetchProducts","catArray","item","selectedCategories","includes","allCategories","list","items","listForAll","linkToDetails","addToCart","productId","userid","sendCartUpdate","fluid","Tab","defaultActiveKey","sm","Link","Content","Pane","margin","Spinner","animation","Img","Title","threeDots","totalPages","currentPage","showMax","prevNext","activeBgColor","activeBorderColor","page","useState","done","setDone","stripe","useStripe","elements","useElements","handleSubmit","createPaymentMethod","card","getElement","CardElement","error","paymentMethod","axios","post","amount","paymentTotal","success","emptyCart","setTimeout","message","maxWidth","flexDirection","stripeTestPromise","loadStripe","CartDetails","cartTotal","cartItems","makePayment","totalArray","parseFloat","totalAmount","reduce","acc","curr","unitary_price","quantity","removeFromCart","faTrash","App","productidArray","idArray","setPayment","path","exact","render","component","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e0864144.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport {Navbar, Nav, Badge} from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCartPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Style.css\"\r\n\r\nclass NavBar extends React.Component {\r\n    state={\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\">\r\n                <Link to='/'>\r\n                    <Navbar.Brand>Strive-Mazon</Navbar.Brand>\r\n                </Link>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Link to=\"/backoffice\"\r\n                            className={\r\n                                this.props.location.pathname === '/backoffice'\r\n                                ? \"nav-link active\"\r\n                                : \"nav-link\"\r\n                            }\r\n                            >\r\n                            Backoffice\r\n                        </Link>\r\n                    </Nav>\r\n                    \r\n                    {this.props.location.pathname === '/backoffice'\r\n                    ?null\r\n                    :   (\r\n                            <>\r\n                                <FontAwesomeIcon icon={faCartPlus} className=\"mt-4\" onClick={()=>this.props.history.push(\"/checkout\")}/>\r\n                                <Badge variant=\"info\">{this.props.updateProductInCart ?this.props.updateProductInCart :0}</Badge>\r\n                            </>\r\n                        )\r\n                    }\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(NavBar);\r\n","import React, { Component, useContext } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Image,\r\n    Navbar,\r\n    Nav,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Accordion,\r\n    Card,\r\n    Badge\r\n} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\r\n\r\n\r\nfunction CustomToggle({ children, eventKey, callback }) {\r\n    const currentEventKey = useContext(AccordionContext);\r\n\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey)\r\n    );\r\n\r\n    const isCurrentEventKey = currentEventKey === eventKey;\r\n\r\n    return (\r\n      <div\r\n        onClick={decoratedOnClick}\r\n        style={{\r\n          cursor: \"pointer\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          color: \"#fff\",\r\n          fontSize: \"1rem\",\r\n          fontWeight: \"900\",\r\n          padding: \"0.5rem 1rem\",\r\n          fontFamily: \"sans-serif\",\r\n        }}\r\n      >\r\n        {children}\r\n        <FontAwesomeIcon\r\n          style={{ height: \"auto\" }}\r\n          icon={isCurrentEventKey ? faAngleUp : faAngleDown}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\nclass Details extends Component {\r\n\r\n    state = {\r\n        product: [],\r\n        productid: null,\r\n        addReview: false,\r\n        editModal: false,\r\n        newReview: {\r\n            comment: \"\",\r\n            rate: 1\r\n        },\r\n        reviews: [],\r\n        photo: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const newReview = this.state.newReview\r\n        if (e.currentTarget.id === \"rate\") {\r\n            newReview[e.currentTarget.id] = parseInt(e.currentTarget.value)\r\n        } \r\n        else {\r\n            newReview[e.currentTarget.id] = e.currentTarget.value\r\n        }\r\n\r\n        this.setState({\r\n            newReview\r\n        });\r\n    }\r\n\r\n    fetchDetails = async () => {\r\n        const resp = await fetch(`${process.env.REACT_APP_API_URL}/products/` + this.props.match.params.id)\r\n        if (resp.ok) {\r\n            const details = await resp.json()\r\n            this.setState({\r\n                product: details.data\r\n            });\r\n        }\r\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/products/` + this.props.match.params.id + \"/reviews\")\r\n        if (response.ok) {\r\n            const details = await response.json()\r\n            this.setState({\r\n                reviews: details.data\r\n            });\r\n        }\r\n    }\r\n\r\n    addReview = async (e) => {\r\n        e.preventDefault()\r\n        \r\n        const reviewBody = ({...this.state.newReview, \"productid\": this.props.match.params.id})\r\n        \r\n        const resp = await fetch(`${process.env.REACT_APP_API_URL}/reviews`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(reviewBody),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        if (resp.ok) {\r\n            \r\n            this.setState({\r\n                addReview: false,\r\n                newReview: {\r\n                    comment: \"\",\r\n                    rate: null\r\n                },\r\n            });\r\n            \r\n            this.fetchDetails()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchDetails()\r\n    }\r\n\r\n    deleteReview = async (id) => {\r\n        const resp = await fetch(`${process.env.REACT_APP_API_URL}/reviews/` + id, {\r\n            method: \"DELETE\"\r\n        })\r\n\r\n        this.fetchDetails()\r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n        console.log(this.state.reviews)\r\n        console.log(this.state.product)\r\n        return (\r\n            <div>\r\n                <Container className=\"py-5\">\r\n                    <Row>\r\n                        {this.state.product &&(\r\n                            <>\r\n                                <Col md={3} className=\"mt-5\">\r\n                                    <Image src={this.state.product.image_url} style={{ height: \"50vh\", width: \"25rem\" }} />\r\n                                </Col>\r\n                                <Col md={7} className=\"mt-5 detail\">\r\n                                    <div className=\"w-50\">\r\n                                        <p><h3>{this.state.product.name}</h3></p>\r\n                                        <p>\r\n                                            <span><strong>Description:</strong></span>\r\n                                            <span> {this.state.product.description}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span><strong>Brand:</strong></span>\r\n                                            <span> {this.state.product.brand}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between w-50\">\r\n                                        <Badge variant=\"info\" style={{lineHeight: '2rem', fontSize: 'large'}}>€{this.state.product.price}</Badge>\r\n                                        <Button variant=\"secondary\" onClick={() => this.setState({ addReview: true })}>Add review</Button>\r\n                                    </div>\r\n\r\n                                    <div className=\"d-flex justify-content-center mt-4 w-75\">\r\n                                        {this.state.reviews.length > 0 ?\r\n                                            <Accordion style={{ width: \"70%\" }}>\r\n                                                <Card className=\"accordion-card\">\r\n                                                        <CustomToggle as={Card.Header} eventKey=\"1\">\r\n                                                            See customers' reviews!\r\n                                                        </CustomToggle>\r\n                                                    <Accordion.Collapse eventKey=\"1\">\r\n                                                        <>\r\n                                                            {this.state.reviews.map(review =>\r\n                                                                <Card.Body key={review._id}>\r\n                                                                    <Badge variant=\"info\">{review.rate}</Badge> : {review.comment}\r\n                                                                    <Button\r\n                                                                        className=\"ml-3\"\r\n                                                                        variant=\"danger\"\r\n                                                                        onClick={() => this.deleteReview(review._id)}\r\n                                                                    >Delete</Button>\r\n                                                                    {/* <Button\r\n                                                                        className=\"ml-3\"\r\n                                                                        variant=\"warning\"\r\n                                                                    >Edit</Button> */}\r\n                                                                </Card.Body>\r\n                                                            )}\r\n                                                        </>\r\n                                                    </Accordion.Collapse>\r\n                                                </Card>\r\n                                            </Accordion>\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                    </div>\r\n                                </Col>\r\n                            </>\r\n                        )}\r\n                    </Row>\r\n                    <Modal show={this.state.addReview} onHide={() => this.setState({\r\n                        addReview: false,\r\n                        newReview: {\r\n                            comment: \"\",\r\n                            rate: null,\r\n                            productid: null\r\n                        }\r\n                    })}>\r\n                        <Modal.Body>\r\n                            <Form onSubmit={this.addReview} >\r\n                                <Row className=\"d-flex justify-content-center\">\r\n                                    <Col md={8}>\r\n                                        <Form.Group controlId=\"comment\">\r\n                                            <Form.Label>Comment</Form.Label>\r\n                                            <Form.Control\r\n                                                value={this.state.newReview.comment}\r\n                                                onChange={this.handleChange}\r\n                                                type=\"text\"\r\n                                                placeholder=\"Your comment for the product\" />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"d-flex justify-content-center\">\r\n                                    <Col md={8}>\r\n                                        <Form.Group controlId=\"rate\">\r\n                                            <Form.Label>Rate the product</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"number\"\r\n                                                value={this.state.newReview.rate}\r\n                                                onChange={this.handleChange}\r\n                                                placeholder=\"Rate between 1-5\" />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add review\r\n                                </Button>\r\n\r\n                                </div>\r\n\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    \r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Details;","import React, { Component } from \"react\";\r\nimport { \r\n  Container, \r\n  Table, \r\n  ToggleButton, \r\n  ToggleButtonGroup, \r\n  DropdownButton, \r\n  Dropdown, \r\n  ButtonGroup,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Alert,\r\n  Row,\r\n  Col\r\n} from \"react-bootstrap\";\r\n\r\n\r\nclass Backoffice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: [],\r\n      totalProducts: null,\r\n      numPerPage: 2,\r\n      currentPageNum: 1,\r\n      sortingKeys: [],\r\n      selectedKey: '...',\r\n      orderKey:'desc',\r\n      orderKeysArray: ['asc','desc'],\r\n      newProduct: {\r\n        name: \"\",\r\n        brand: \"\",\r\n        description: \"\",\r\n        category: '',\r\n        price: ''\r\n    },\r\n      editProductInfo: {\r\n        name: \"\",\r\n        brand: \"\",\r\n        description: \"\",\r\n        category: '',\r\n        price: ''\r\n      },\r\n      addModal: false,\r\n      editModal: false,\r\n      photo: '',\r\n      productid: ''\r\n    };\r\n    \r\n  }\r\n\r\n  getNumberOfProduct = async () => {\r\n    const totalProducts = `${process.env.REACT_APP_API_URL}/products`   \r\n    await fetch(totalProducts)\r\n    .then((response) => response.json())\r\n    \r\n    .then((responseObject) =>{\r\n        console.log(responseObject)\r\n        this.setState({totalProducts: responseObject.count})\r\n        \r\n        if(responseObject.data.length>0){\r\n            let keys = Object.keys(responseObject.data[0]);\r\n            const keyArr = []\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    let key = keys[i];\r\n                    if((key === 'name')||(key === 'brand')||(key === 'description')||(key === 'category')||(key === 'price'))\r\n                        keyArr.push(key)\r\n                }        \r\n                this.setState({sortingKeys: keyArr})\r\n        }\r\n    })\r\n     \r\n  }\r\n\r\n  changePage = (value) => {\r\n      if(value > 1){\r\n          this.setState({\r\n              currentPageNum: value\r\n            })\r\n      }else {\r\n          this.setState({currentPageNum: 1})\r\n      }\r\n      this.dataInPages()\r\n  }\r\n\r\n  dataInPages = async () => {\r\n    let sortParam\r\n    if(this.state.selectedKey === '...'){\r\n        const skip = (this.state.currentPageNum * this.state.numPerPage)-this.state.numPerPage\r\n        const url = `${process.env.REACT_APP_API_URL}/products?limit=${this.state.numPerPage}&offset=${skip}`\r\n            \r\n        await fetch(url)\r\n        .then((response) => response.json())\r\n        \r\n        .then((responseObject) =>\r\n        this.setState({ \r\n            products: responseObject.data})\r\n        )\r\n    }\r\n    else {\r\n        sortParam = this.state.selectedKey        \r\n\r\n        const skip = (this.state.currentPageNum * this.state.numPerPage)-this.state.numPerPage\r\n        const url = `${process.env.REACT_APP_API_URL}/products?limit=${this.state.numPerPage}&offset=${skip}&sort=${sortParam}&order=${this.state.orderKey}`\r\n            \r\n        await fetch(url)\r\n        .then((response) => response.json())\r\n        \r\n        .then((responseObject) =>\r\n        this.setState({ \r\n            products: responseObject.data})\r\n        )\r\n    }\r\n  }\r\n\r\n  getOrderBy = (eventKey) => {\r\n    this.setState({orderKey: eventKey})\r\n  }\r\n  \r\n  sortedList = async (sortByKey) => {\r\n    const skip = (this.state.currentPageNum * this.state.numPerPage)-this.state.numPerPage\r\n    const url = `${process.env.REACT_APP_API_URL}/products?limit=${this.state.numPerPage}&offset=${skip}&sort=${sortByKey}&order=${this.state.orderKey}`\r\n        \r\n    await fetch(url)\r\n    .then((response) => response.json())\r\n    .then((responseObject) =>\r\n    this.setState({ products: responseObject.data })\r\n    )\r\n  }\r\n  \r\n  orderedList = async (orderByKey) => {\r\n    const skip = (this.state.currentPageNum * this.state.numPerPage)-this.state.numPerPage\r\n    const url = `${process.env.REACT_APP_API_URL}/products?limit=${this.state.numPerPage}&offset=${skip}&sort=${this.state.selectedKey}&order=${orderByKey}`\r\n        \r\n    await fetch(url)\r\n    .then((response) => response.json())\r\n    .then((responseObject) =>\r\n    this.setState({ products: responseObject.data })\r\n    )\r\n  }\r\n\r\n  handleSelect = (eventKey) =>{\r\n      this.setState({selectedKey: eventKey})\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n      \r\n    this.getNumberOfProduct()\r\n      \r\n    this.dataInPages()\r\n  };\r\n\r\n  \r\n  saveImg = (e) => {\r\n    this.setState({\r\n        photo: e.target.files[0]\r\n    });\r\n}\r\n\r\nupdateProductInfo = async (e) => {\r\n  e.preventDefault()\r\n  const data = new FormData()\r\n  data.append(\"product\", this.state.photo)\r\n\r\n  const resp = await fetch(`${process.env.REACT_APP_API_URL}/products/` + this.state.productid, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(this.state.editProductInfo),\r\n      headers: {\r\n          \"Content-Type\": \"application/json\"\r\n      }\r\n  })\r\n\r\n  let addPhoto = await fetch(`${process.env.REACT_APP_API_URL}/products/` + this.state.productid + \"/upload\", {\r\n      method: \"POST\",\r\n      body: data\r\n  })\r\n\r\n  if (resp.ok) {\r\n      this.setState({\r\n          editModal: false\r\n      });\r\n      this.dataInPages()\r\n  }\r\n\r\n}\r\n  \r\n  editInfo = async (productid) => {\r\n    const resp = await fetch(`${process.env.REACT_APP_API_URL}/products/` + productid)\r\n\r\n    if (resp.ok) {\r\n        const product = await resp.json()        \r\n        console.log(product)\r\n        this.setState({\r\n            editProductInfo: {\r\n                name: product.data.name,\r\n                brand: product.data.brand,\r\n                description: product.data.description,\r\n                category: product.data.category,\r\n                price: product.data.price\r\n            },\r\n            productid: product.data._id,\r\n            editModal: true\r\n        });\r\n    }\r\n}\r\n\r\neditSingleProductInfo = event => {\r\n    let editProductInfo = this.state.editProductInfo\r\n    let currentId = event.currentTarget.id\r\n    console.log(currentId)\r\n    editProductInfo[currentId] = event.currentTarget.value\r\n\r\n    this.setState({ editProductInfo: editProductInfo })\r\n  }\r\n\r\n\r\ngetProductInfo = event => {\r\n    let newProduct = this.state.newProduct\r\n    let currentId = event.currentTarget.id\r\n    console.log(currentId)\r\n    newProduct[currentId] = event.currentTarget.value\r\n\r\n    this.setState({ newProduct: newProduct })\r\n  }\r\n\r\n\r\n  addNewproduct = async (e) => {\r\n      \r\n    e.preventDefault();\r\n\r\n    const url = `${process.env.REACT_APP_API_URL}/products`\r\n\r\n    try {\r\n      let response = await fetch(url , {\r\n        method: \"POST\",\r\n        body: JSON.stringify(this.state.newProduct),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n      console.log(response.json())\r\n      if (response.ok) {\r\n        alert('Record saved!')\r\n        this.setState({\r\n          newProduct: {\r\n            name: \"\",\r\n            brand: \"\",\r\n            description: \"\",\r\n            category: '',\r\n            price: ''\r\n          },\r\n          addModal: false\r\n        })\r\n        this.dataInPages()\r\n      } else {\r\n        let json = await response.json()\r\n        alert(json)\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  \r\n  }\r\n\r\n  deleteInfo = async (productid) => {\r\n    const resp = await fetch(`${process.env.REACT_APP_API_URL}/products/` + productid, {\r\n        method: \"DELETE\"\r\n    })\r\n\r\n    if (resp.ok) {\r\n        alert('Product deleted!')\r\n        this.dataInPages()\r\n    }\r\n  }\r\n\r\n  render() {\r\n      console.log(this.state.sortingKeys)\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(this.state.totalProducts / this.state.numPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n          <Container className=\"pt-3\">\r\n            <Button variant=\"info\" onClick={() => this.setState({addModal: true})}>Add new product</Button>\r\n            <DropdownButton\r\n                as={ButtonGroup}\r\n                className=\"mx-3\"\r\n                key=\"left\"\r\n                id={`dropdown-button-drop-left`}\r\n                drop=\"left\"\r\n                variant=\"secondary\"\r\n                title={`Sort by ${this.state.selectedKey.toUpperCase()}`}\r\n                onSelect={this.handleSelect}\r\n            >\r\n                {this.state.sortingKeys.map((key, i) => {\r\n                    return(\r\n                        <Dropdown.Item key={i} eventKey={key} onClick={()=>this.sortedList(key)}>{key}</Dropdown.Item>\r\n                    )\r\n                })}\r\n            </DropdownButton>\r\n            \r\n            <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1} className=\"py-3\">\r\n              { pageNumbers.map((number) => {\r\n                  if(((number === 1)||(number === pageNumbers.length))||((number > this.state.currentPageNum - 3)&&(number < this.state.currentPageNum + 3)))\r\n                  {\r\n                  return(\r\n                  <ToggleButton className=\"border\" variant=\"secondary\" key={number} value={number} onClick={()=>this.changePage(number)}> {number}</ToggleButton>\r\n                  ) \r\n                  }\r\n                  else {\r\n\r\n                      if(number < 3){\r\n                          return(\r\n                              <ToggleButton className=\"border\" variant=\"secondary\" key={number} value={number} onClick={()=>this.changePage(number)}> {'<<'}</ToggleButton>\r\n                              )\r\n                      }else if(number > pageNumbers.length-2){\r\n                          return(\r\n                              <ToggleButton className=\"border\" variant=\"secondary\" key={number} value={number} onClick={()=>this.changePage(number)}> {'>>'}</ToggleButton>\r\n                              )\r\n                      }\r\n                  }\r\n                })\r\n              } \r\n            </ToggleButtonGroup>\r\n\r\n            <div className=\"d-flex\">\r\n                <Alert variant=\"info\" className=\"text-center\">page <strong>{this.state.currentPageNum}</strong> of <strong>{pageNumbers.length}</strong></Alert>\r\n                {this.state.selectedKey !== '...' \r\n                ?(\r\n                    <div className=\"d-flex\">\r\n                    <Alert variant=\"info\" className=\"mx-3 text-center\">Order By <strong>{this.state.selectedKey.toUpperCase()}</strong></Alert>\r\n                    <DropdownButton\r\n                        as={ButtonGroup}\r\n                        className=\"h-75\"\r\n                        key=\"right\"\r\n                        id={`dropdown-button-drop-right`}\r\n                        drop=\"right\"\r\n                        variant=\"secondary\"\r\n                        title={`${this.state.orderKey.toUpperCase()}ENDING order`}\r\n                        onSelect={this.getOrderBy}\r\n                    >\r\n                        {this.state.orderKeysArray.map((key, i) => {\r\n                            return(\r\n                                <Dropdown.Item key={i} eventKey={key} onClick={()=>this.orderedList(key)}>{key}</Dropdown.Item>\r\n                            )\r\n                        })}\r\n                    </DropdownButton>\r\n                    </div>\r\n                    )\r\n                :null}\r\n            </div>\r\n\r\n            <Table striped bordered hover size=\"sm\" responsive=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    {this.state.sortingKeys.map((header, i) => <th key={i}>{header.toUpperCase()}</th>)}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n            \r\n                    {this.state.products.map( (product, i) => {\r\n                                      \r\n                        return (\r\n                            <tr key={product._id}>\r\n                                <td>{this.state.currentPageNum > 1\r\n                                      ? i = i+1+(this.state.numPerPage * this.state.currentPageNum) - this.state.numPerPage\r\n                                      :i = i+1}\r\n                                      </td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.description}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td><Button variant=\"warning\" onClick={() => this.editInfo(product._id)}>edit</Button></td>\r\n                                <td><Button variant=\"danger\" onClick={() => this.deleteInfo(product._id)}>delete</Button></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n            <Modal\r\n                show={this.state.editModal}\r\n                onHide={() => this.setState({\r\n                    editModal: false, editProductInfo: {\r\n                        name: \"\",\r\n                        brand: \"\",\r\n                        description: \"\",\r\n                        category: '',\r\n                        price: ''\r\n                    }\r\n                })}>\r\n                <Modal.Body>\r\n                    <Form onSubmit={this.updateProductInfo}>\r\n                        <div className=\"form-group mt-5\">\r\n                            <label for=\"name\">Product name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"name\"\r\n                                placeholder=\"Input here the Product name\"\r\n                                onChange={this.editSingleProductInfo}\r\n                                value={this.state.editProductInfo.name}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group \">\r\n                            <label for=\"brand\">Product brand</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"brand\"\r\n                                placeholder=\"Input here the Product brand\"\r\n                                onChange={this.editSingleProductInfo}\r\n                                value={this.state.editProductInfo.brand}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"description\">Product description</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"description\"\r\n                                placeholder=\"Input here the Product description\"\r\n                                onChange={this.editSingleProductInfo}\r\n                                value={this.state.editProductInfo.description}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"category\">Product category</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"category\"\r\n                                placeholder=\"Input here the Product category\"\r\n                                onChange={this.editSingleProductInfo}\r\n                                value={this.state.editProductInfo.category}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"price\">Product price</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"price\"\r\n                                placeholder=\"Input here the Product price\"\r\n                                onChange={this.editSingleProductInfo}\r\n                                value={this.state.editProductInfo.price}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"file\" name=\"file\" onChange={this.saveImg} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <Button className=\"btn btn-primary mt-4\" type=\"submit\">\r\n                                Update Product Info\r\n                        </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal\r\n                show={this.state.addModal}\r\n                onHide={() => this.setState({\r\n                    addModal: false, newProduct: {\r\n                        name: \"\",\r\n                        surname: \"\",\r\n                        email: \"\",\r\n                        dateofbirth: '',\r\n                        country: ''\r\n                    }\r\n                })}>\r\n                <Modal.Body>\r\n                    <Form onSubmit={this.addNewproduct}>\r\n                        <div className=\"form-group mt-5\">\r\n                            <label for=\"name\">Product name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"name\"\r\n                                placeholder=\"Input here the Product name\"\r\n                                onChange={this.getProductInfo}\r\n                                value={this.state.newProduct.name}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group \">\r\n                            <label for=\"surname\">Product brand</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"brand\"\r\n                                placeholder=\"Input here the Product brand\"\r\n                                onChange={this.getProductInfo}\r\n                                value={this.state.newProduct.brand}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"eamil\">Product description</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"description\"\r\n                                placeholder=\"Input here the Product description\"\r\n                                onChange={this.getProductInfo}\r\n                                value={this.state.newProduct.description}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"dateofbirth\">Product category</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"category\"\r\n                                placeholder=\"Input here the Product category\"\r\n                                onChange={this.getProductInfo}\r\n                                value={this.state.newProduct.category}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"country\">Product price</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                id=\"price\"\r\n                                placeholder=\"Input here the Product price\"\r\n                                onChange={this.getProductInfo}\r\n                                value={this.state.newProduct.price}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        {/* <div>\r\n                            <input type=\"file\" name=\"file\" onChange={this.saveImg} />\r\n                        </div> */}\r\n                        <div className=\"form-group\">\r\n                            <Button className=\"btn btn-primary mt-4\" type=\"submit\">\r\n                                Save Product Info\r\n                        </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </Modal.Body>\r\n            </Modal>\r\n          </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backoffice;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  Alert,\r\n  Tab,\r\n  Spinner,\r\n  Nav,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCartPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { withRouter } from \"react-router\";\r\nimport Pagination from \"react-bootstrap-4-pagination\";\r\nimport \"./Style.css\";\r\n\r\nclass Products extends React.Component {\r\n  state = {\r\n    products: [],\r\n    numOfProduct: [],\r\n    numPerPage: 6,\r\n    currentPageNum: 1,\r\n    loading: false,\r\n    pageNumbers: [],\r\n  };\r\n\r\n  getNumberOfProduct = async () => {\r\n    let total = [];\r\n    const categories = await this.getCategories();\r\n    if (categories) {\r\n      for (const category of categories) {\r\n        // get total number for each category\r\n        const url = `${process.env.REACT_APP_API_URL}/products?category=${category}`;\r\n        const resp = await fetch(url);\r\n\r\n        if (resp.ok) {\r\n          const products = await resp.json();\r\n          total.push(products.count);\r\n        }\r\n      }\r\n\r\n        // get total number for all category together\r\n      const url = `${process.env.REACT_APP_API_URL}/products`;\r\n      const resp = await fetch(url);\r\n\r\n      if (resp.ok) {\r\n        const products = await resp.json();\r\n        total.unshift(products.count);\r\n      }\r\n      this.setState({\r\n        numOfProduct: total,\r\n      });\r\n      this.getPages(total);\r\n    }\r\n  };\r\n\r\n  getPages = (total) => {\r\n    const pages = [];\r\n    for (let i = 0; i < total.length; i++) {\r\n      const element = total[i];\r\n      let innerPages = [];\r\n      for (let j = 1; j <= Math.ceil(element / this.state.numPerPage); j++) {\r\n        innerPages.push(j);\r\n      }\r\n      pages.push(innerPages);\r\n    }\r\n    this.setState({\r\n      pageNumbers: pages,\r\n    });\r\n  };\r\n\r\n  changePage = (value) => {\r\n    if (value > 1) {\r\n      this.setState({\r\n        currentPageNum: value,\r\n      });\r\n    } else {\r\n      this.setState({ currentPageNum: 1 });\r\n    }\r\n    this.fetchProducts();\r\n  };\r\n\r\n  getCategories = async () => {\r\n    const url = `${process.env.REACT_APP_API_URL}/products`;\r\n    const resp = await fetch(url);\r\n\r\n    if (resp.ok) {\r\n      const categories = await resp.json();\r\n      let catArray = categories.data.map((item) => item.category);\r\n      let selectedCategories = [];\r\n      catArray.map((item) =>\r\n        !selectedCategories.includes(item)\r\n          ? selectedCategories.push(item)\r\n          : null\r\n      );\r\n\r\n      return selectedCategories;\r\n    }\r\n  };\r\n\r\n  fetchProducts = async () => {\r\n    let allCategories = [];\r\n    const categories = await this.getCategories();\r\n    if (categories) {\r\n      const skip =\r\n        this.state.currentPageNum * this.state.numPerPage -\r\n        this.state.numPerPage;\r\n      for (const category of categories) {\r\n        // get all products and break them into category and add into the array\r\n        let list = {};\r\n        const url = `${process.env.REACT_APP_API_URL}/products?category=${category}&limit=${this.state.numPerPage}&offset=${skip}`;\r\n        const resp = await fetch(url);\r\n\r\n        if (resp.ok) {\r\n          const products = await resp.json();\r\n          list.category = category;\r\n          list.items = products.data;\r\n          allCategories.push(list);\r\n        }\r\n      }\r\n\r\n      // get all products for all categories and add into the array\r\n      let listForAll = {};\r\n      const category = \"All Products\";\r\n      const url = `${process.env.REACT_APP_API_URL}/products?limit=${this.state.numPerPage}&offset=${skip}`;\r\n      const resp = await fetch(url);\r\n\r\n      if (resp.ok) {\r\n        const products = await resp.json();\r\n        listForAll.category = category;\r\n        listForAll.items = products.data;\r\n        allCategories.unshift(listForAll);\r\n      }\r\n      this.setState({\r\n        products: allCategories,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getNumberOfProduct();\r\n    this.fetchProducts();\r\n  }\r\n\r\n  linkToDetails = (id) => {\r\n    this.props.history.push(\"/productDetails/\" + id);\r\n  };\r\n\r\n  addToCart = async (productId) => {\r\n    const userid = 1;\r\n    const url = `${process.env.REACT_APP_API_URL}/cart`;\r\n    const addProduct = await fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ productid: productId, userid: userid }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    if (addProduct.ok) {\r\n      this.props.sendCartUpdate(productId, userid);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          {this.state.products && this.state.products.length > 0 && (\r\n            <Row className=\"pt-5\">\r\n              <Col>\r\n                <Tab.Container\r\n                  id=\"left-tabs-example\"\r\n                  defaultActiveKey=\"0\"\r\n                  onSelect={() => this.changePage(1)}\r\n                >\r\n                  <Row>\r\n                    <Col sm={2}>\r\n                      <Nav variant=\"pills\" className=\"flex-column\">\r\n                        {this.state.products.map((list, i) => {\r\n                          return (\r\n                            <Nav.Item key={i}>\r\n                              <Nav.Link\r\n                                eventKey={i}\r\n                                className=\"d-flex justify-content-between\"\r\n                              >\r\n                                <small>\r\n                                  <b>{list.category}</b>\r\n                                </small>\r\n                                <Badge variant=\"light\">\r\n                                  <span>{this.state.numOfProduct[i]}</span>\r\n                                </Badge>\r\n                              </Nav.Link>\r\n                            </Nav.Item>\r\n                          );\r\n                        })}\r\n                      </Nav>\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                      <Tab.Content>\r\n                        {this.state.products.map((list, i) => {\r\n                          return (\r\n                            <Tab.Pane key={i} eventKey={i}>\r\n                              {this.state.loading && (\r\n                                <div\r\n                                  style={{\r\n                                    width: \"10%\",\r\n                                    height: \"auto\",\r\n                                    margin: \"auto\",\r\n                                  }}\r\n                                >\r\n                                  <Spinner animation=\"border\" variant=\"dark\" />\r\n                                </div>\r\n                              )}\r\n                              {!this.state.loading &&\r\n                                list.items.length > 0 &&\r\n                                this.state.pageNumbers &&\r\n                                this.state.pageNumbers.length > 0 && (\r\n                                  <>\r\n                                    <div className=\"d-flex flex-wrap\">\r\n                                      {list.items.map((product) => (\r\n                                          <Card\r\n                                          key={product._id}\r\n                                            style={{ width: \"20rem\" }}\r\n                                            className=\"productCard\"\r\n                                          >\r\n                                            <Card.Img\r\n                                              variant=\"top\"\r\n                                              src={product.image_url}\r\n                                              height=\"300px\"\r\n                                            />\r\n                                            <Card.Body>\r\n                                              <Card.Title>\r\n                                                {product.name}\r\n                                              </Card.Title>\r\n                                              <div className=\"d-flex justify-content-between\">\r\n                                                <label>\r\n                                                  Brand: {product.brand}\r\n                                                </label>\r\n                                                <h4> €{product.price}</h4>\r\n                                              </div>\r\n                                              <div className=\"d-flex justify-content-between\">\r\n                                                <Button\r\n                                                  variant=\"info\"\r\n                                                  onClick={() =>\r\n                                                    this.linkToDetails(\r\n                                                      product._id\r\n                                                    )\r\n                                                  }\r\n                                                >\r\n                                                  detail\r\n                                                </Button>\r\n                                                <Button\r\n                                                  variant=\"secondary\"\r\n                                                  onClick={\r\n                                                    () =>\r\n                                                      this.addToCart(\r\n                                                        product._id\r\n                                                      )\r\n                                                  }\r\n                                                >\r\n                                                  add to cart\r\n                                                  <FontAwesomeIcon\r\n                                                    icon={faCartPlus}\r\n                                                  />\r\n                                                </Button>\r\n                                              </div>\r\n                                            </Card.Body>\r\n                                          </Card>\r\n                                      ))}\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                      <Pagination\r\n                                        threeDots\r\n                                        totalPages={\r\n                                          this.state.pageNumbers[i].length\r\n                                        }\r\n                                        currentPage={this.state.currentPageNum}\r\n                                        showMax={7}\r\n                                        prevNext\r\n                                        activeBgColor=\"#17a2b8\"\r\n                                        color=\"#17a2b8\"\r\n                                        activeBorderColor=\"#17a2b8\"\r\n                                        onClick={(page) =>\r\n                                          this.changePage(page)\r\n                                        }\r\n                                      />\r\n\r\n                                      <Alert\r\n                                        variant=\"light\"\r\n                                        className=\"text-right\"\r\n                                      >\r\n                                        page{\" \"}\r\n                                        <strong>\r\n                                          {this.state.currentPageNum}\r\n                                        </strong>{\" \"}\r\n                                        of{\" \"}\r\n                                        <strong>\r\n                                          {this.state.pageNumbers[i].length}\r\n                                        </strong>\r\n                                      </Alert>\r\n                                    </div>\r\n                                  </>\r\n                                )}\r\n                              {!this.state.loading && list.items.length < 1 && (\r\n                                <p className=\"text-center\">\r\n                                  <strong>No product in store</strong>\r\n                                </p>\r\n                              )}\r\n                            </Tab.Pane>\r\n                          );\r\n                        })}\r\n                      </Tab.Content>\r\n                    </Col>\r\n                  </Row>\r\n                </Tab.Container>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Products);\r\n","import React, {useState} from \"react\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport axios from \"axios\";\r\nimport { Alert, Button, Container, Form } from \"react-bootstrap\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport \"./Style.css\"\r\n\r\nconst CheckoutForm = (props) => {\r\n  console.log(props.history)\r\n  const [done, setDone] = useState(false)\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n    });\r\n\r\n    if (!error) {\r\n      console.log(\"Stripe 23 | token generated!\", paymentMethod);\r\n      //send token with payment details to backend\r\n      try {\r\n        const { id } = paymentMethod;\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_API_URL}/cart/stripe/charge`,\r\n          {\r\n            amount: props.paymentTotal,\r\n            id: id,\r\n          }\r\n        );\r\n\r\n        console.log(\"Stripe 35 | data\", response.data.success);\r\n        if (response.data.success) {\r\n          console.log(\"CheckoutForm.js 25 | payment successful!\");\r\n          const url = `${process.env.REACT_APP_API_URL}/cart/1`;\r\n          const resp = await fetch(url, {\r\n            method: \"DELETE\",\r\n          });\r\n      \r\n          if (resp.ok) {\r\n            props.emptyCart(0);\r\n            setDone(true)\r\n              setTimeout(() => {\r\n                setDone(false)\r\n                props.history.push(\"/\")\r\n              }, 5000);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(\"CheckoutForm.js 28 | \", error);\r\n      }\r\n    } else {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"text-center pt-3\">\r\n      <div style={{maxWidth: '50%', margin:'auto'}}>\r\n        <h4>Enter your card details to complete the payment</h4>\r\n        <Alert variant=\"info\">\r\n        <strong>Total Purchase (€{props.paymentTotal})</strong>\r\n        </Alert>\r\n    <Form onSubmit={handleSubmit} style={{ maxWidth: '75%', display:'flex', margin:'auto', flexDirection: 'column' }}>\r\n      <CardElement className=\"my-5\" />\r\n      <button id=\"payBtn\">Pay Now</button>\r\n    </Form>\r\n    <Alert variant=\"info\" show={done} className=\"mt-3\">\r\n      <strong>\r\n        Payment accepted and your goods are on the way! Thank you for your purchase and hope to see you again!\r\n      </strong>\r\n    </Alert>\r\n    </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(CheckoutForm);","import React from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\n\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nconst PUBLIC_KEY =\r\n  \"pk_test_51HiMfGF0BTR6mhRYaP0W68izWmkcFUYNqvzshZIwb8d3MyAuViC8HFmP8WU4TQEOBsjlAqLn9tOr5RacYxeit67q00iqLQn6QY\";\r\n\r\nconst stripeTestPromise = loadStripe(PUBLIC_KEY);\r\n\r\nconst Stripe = ({paymentTotal, emptyCart}) => {\r\n  return (\r\n    <Elements stripe={stripeTestPromise}>\r\n      <CheckoutForm paymentTotal={paymentTotal} emptyCart={emptyCart}/>\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default withRouter(Stripe);\r\n","import React from \"react\";\r\nimport { Alert, Button, Table, Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass CartDetails extends React.Component {\r\n  state = {\r\n    cartTotal: 0,\r\n    cartItems: [],\r\n  };\r\n\r\n  makePayment = () => {\r\n    this.props.paymentTotal(this.state.cartTotal)\r\n    this.props.history.push(\"/payments\")\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const url = `${process.env.REACT_APP_API_URL}/cart/1`;\r\n    const resp = await fetch(url);\r\n    if (resp.ok) {\r\n      const products = await resp.json();\r\n      if (products.length > 0) {\r\n        const totalArray = products.map((item) => parseFloat(item.total));\r\n        let totalAmount = totalArray.reduce((acc, curr) => {\r\n          return acc + curr;\r\n        });\r\n        this.setState({\r\n          cartItems: products,\r\n          cartTotal: totalAmount,\r\n        });\r\n        console.log(totalArray);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.cartItems);\r\n    return (\r\n      <Container>\r\n        <div className=\"text-center mt-5\">\r\n          <Table striped bordered hover size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>name</th>\r\n                <th>unit price</th>\r\n                <th>quantity</th>\r\n                <th>total price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.cartItems.map((item, i) => (\r\n                <tr key={i}>\r\n                  <th>{i + 1}</th>\r\n                  <th>{item.name}</th>\r\n                  <th>{item.unitary_price}</th>\r\n                  <th>{item.quantity}</th>\r\n                  <th>{item.total}</th>\r\n                  <th>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      onClick={() => this.removeFromCart(item._id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </th>\r\n                </tr>\r\n              ))}\r\n              <tr>\r\n                <th></th>\r\n                <th></th>\r\n                <th></th>\r\n                <th>Overall Total</th>\r\n                <th>€{this.state.cartTotal}</th>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n          <div className=\"d-flex justify-content-between\">\r\n            <Button variant=\"info\" onClick={() => this.props.history.push(\"/\")}>\r\n              Continue shopping\r\n            </Button>\r\n            <Button variant=\"success\" onClick={() => this.makePayment()}>\r\n              Proceed to Payment\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartDetails;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navbar from \"./components/TopNav\";\nimport Details from \"./components/Details\";\nimport Backoffice from \"./components/Backoffice\";\nimport Products from \"./components/Products\";\nimport Stripe from \"./components/StripeContainer\";\nimport CartDetails from \"./components/CartDetails\";\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n    productidArray: [],\n    paymentTotal: 0\n  };\n\n  addToCart = async (productid, userid) => {\n    if (!this.state.productidArray.includes(productid)) {\n      const idArray = [...this.state.productidArray, productid];\n      this.setState({ productidArray: idArray, count: this.state.count + 1 });\n    } else {\n      this.setState({ count: this.state.count });\n    }\n  };\n\n  emptyCart = (value) => {\n    this.setState({ count: value });\n  };\n  \n  setPayment = (value) => {\n    this.setState({ paymentTotal: value });\n  };\n\n  render() {\n    console.log(this.state.productidArray);\n    return (\n      <Router>\n        <Navbar updateProductInCart={this.state.count} />\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <Products {...props} sendCartUpdate={this.addToCart} />\n          )}\n        />\n        <Route path=\"/productDetails/:id\" component={Details} />\n        <Route path=\"/payments\" \n          render={(props) => <Stripe {...props} paymentTotal={this.state.paymentTotal} emptyCart={this.emptyCart} />} />\n        <Route\n          path=\"/checkout\"\n          render={(props) => <CartDetails {...props} paymentTotal={this.setPayment} />}\n        />\n        <Route path=\"/backoffice\" component={Backoffice} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}